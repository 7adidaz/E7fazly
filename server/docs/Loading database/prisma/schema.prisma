generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model bookmark {
  id           Int            @id @default(autoincrement())
  link         String
  ownerId     Int
  directoryId Int
  type         bookmark_type
  favorite     Boolean
  directory    directory      @relation(fields: [directoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user           @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bookmark_tag bookmark_tag[]
}

model bookmark_tag {
  bookmarkId Int
  tagId      Int
  bookmark    bookmark @relation(fields: [bookmarkId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tag         tag      @relation(fields: [tagId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([bookmarkId, tagId])
}

model directory {
  id                    Int                     @id @default(autoincrement())
  parentId             Int?
  name                  String                  @db.VarChar(255)
  icon                  String
  ownerId              Int
  bookmark              bookmark[]
  user                  user                    @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  directory             directory?              @relation("directoryTodirectory", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_directory       directory[]             @relation("directoryTodirectory")
  user_directory_access user_directory_access[]
}

model tag {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  ownerId     Int
  bookmark_tag bookmark_tag[]
  user         user           @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ownerId")
}

model user {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(255)
  email                 String                  @db.VarChar(255)
  password              String                  @db.VarChar(255)
  bookmark              bookmark[]
  directory             directory[]
  tag                   tag[]
  user_directory_access user_directory_access[]
}

model user_directory_access {
  directoryId Int
  userId      Int
  userRights  access_rights
  directory    directory     @relation(fields: [directoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user          @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([userId, directoryId])
}

enum access_rights {
  edit
  view
}

enum bookmark_type {
  link
  img
  etc
}
